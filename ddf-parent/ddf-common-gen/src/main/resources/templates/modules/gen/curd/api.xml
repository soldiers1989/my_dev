<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>api</name>
	<filePath>${packageName}/${moduleName}/${subModuleName}</filePath>
	<fileName>${ClassName}Api.java</fileName>
	<content><![CDATA[
/**
 * Copyright &copy; 2012-2016 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package ${basePackageName}.${bizPackageName}.api;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

import com.ddf.entity.base.dto.Page;
import ${basePackageName}.entity.${bizPackageName}.dto.${ClassName};
import ${basePackageName}.entity.${bizPackageName}.query.${ClassName}Query;
import ${basePackageName}.entity.${bizPackageName}.vo.${ClassName}Vo;
import ${basePackageName}.${bizPackageName}.service.simple.${ClassName}Service;
import com.ddf.entity.response.ApiResponse;

/**
 * ${functionName}Api
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@RestController
public class ${ClassName}Api extends BaseApi{

	@Autowired
	private ${ClassName}Service ${className}Service;

	@ApiOperation(value="查询单个${ClassName}")
	@RequestMapping(value = "/${className}/query",method = {RequestMethod.GET})
	public ApiResponse<${ClassName}> query(@ApiParam(value = "id",required = true) @RequestParam(required = true) String id) {
		return ApiResponse.success(${className}Service.query4id(id));
	}

	@ApiOperation(value="创建${ClassName}")
	@RequestMapping(value = "/${className}/create",method = {RequestMethod.POST})
	public ApiResponse<Boolean> create(@ModelAttribute ${ClassName} ${className}){
		return ApiResponse.success(${className}Service.create(${className}));
	}

	@ApiOperation(value="修改${ClassName}信息")
	@RequestMapping(value = "/${className}/modify",method = {RequestMethod.POST})
	public ApiResponse<Boolean> modify(@ModelAttribute ${ClassName} ${className}){
		return ApiResponse.success(${className}Service.modify(${className}));
	}

	@ApiOperation(value="删除${ClassName}信息")
	@RequestMapping(value = "/${className}/remove",method = {RequestMethod.POST})
	public ApiResponse<Boolean> remove(@ApiParam(value = "id",required = true) @RequestParam(required=true)String id){
		return ApiResponse.success(${className}Service.remove(id));
	}

}]]>
	</content>
</template>